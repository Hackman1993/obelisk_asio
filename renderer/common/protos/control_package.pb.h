// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control_package.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_control_5fpackage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_control_5fpackage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "rendering_job.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_control_5fpackage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_control_5fpackage_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_control_5fpackage_2eproto;
class ControlPackage;
struct ControlPackageDefaultTypeInternal;
extern ControlPackageDefaultTypeInternal _ControlPackage_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ControlPackage* Arena::CreateMaybeMessage<::ControlPackage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum RenderMessageDetail : int {
  RMD_TRY = 0,
  RMD_FEEDBACK = 1,
  RenderMessageDetail_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  RenderMessageDetail_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool RenderMessageDetail_IsValid(int value);
constexpr RenderMessageDetail RenderMessageDetail_MIN = RMD_TRY;
constexpr RenderMessageDetail RenderMessageDetail_MAX = RMD_FEEDBACK;
constexpr int RenderMessageDetail_ARRAYSIZE = RenderMessageDetail_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RenderMessageDetail_descriptor();
template<typename T>
inline const std::string& RenderMessageDetail_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RenderMessageDetail>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RenderMessageDetail_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RenderMessageDetail_descriptor(), enum_t_value);
}
inline bool RenderMessageDetail_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, RenderMessageDetail* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RenderMessageDetail>(
    RenderMessageDetail_descriptor(), name, value);
}
// ===================================================================

class ControlPackage final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ControlPackage) */ {
 public:
  inline ControlPackage() : ControlPackage(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ControlPackage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ControlPackage(const ControlPackage& from);
  ControlPackage(ControlPackage&& from) noexcept
    : ControlPackage() {
    *this = ::std::move(from);
  }

  inline ControlPackage& operator=(const ControlPackage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ControlPackage& operator=(ControlPackage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ControlPackage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ControlPackage* internal_default_instance() {
    return reinterpret_cast<const ControlPackage*>(
               &_ControlPackage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ControlPackage& a, ControlPackage& b) {
    a.Swap(&b);
  }
  inline void Swap(ControlPackage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ControlPackage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ControlPackage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ControlPackage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ControlPackage& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ControlPackage& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ControlPackage";
  }
  protected:
  explicit ControlPackage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ControlPackage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_control_5fpackage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ControlPackage

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::RenderMessageDetail> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RenderMessageDetail>() {
  return ::RenderMessageDetail_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_control_5fpackage_2eproto
